name: Run Just Report

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  # run-diagnostics:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-latest, ubuntu-latest, macos-latest]
  #       python-version: ["3.11"]

  #   env:
  #     PYTHONIOENCODING: utf-8
  #     PYTHONUTF8: 1
  #     PYTHONLEGACYWINDOWSSTDIO: 1

    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v4

    #   - name: Set up Python ${{ matrix.python-version }}
    #     uses: actions/setup-python@v4
    #     with:
    #       python-version: ${{ matrix.python-version }}

    #   - name: Define recording path based on OS
    #     shell: bash
    #     run: |
    #       if [[ "$RUNNER_OS" == "Windows" ]]; then
    #         echo "RECORDING_PATH=C:/Users/runneradmin/freemocap_data/recording_sessions/freemocap_test_data" >> $GITHUB_ENV
    #       elif [[ "$RUNNER_OS" == "Linux" ]]; then
    #         echo "RECORDING_PATH=/home/runner/freemocap_data/recording_sessions/freemocap_test_data" >> $GITHUB_ENV
    #       elif [[ "$RUNNER_OS" == "macOS" ]]; then
    #         echo "RECORDING_PATH=/Users/runner/freemocap_data/recording_sessions/freemocap_test_data" >> $GITHUB_ENV
    #       fi

    #   - name: Install uv and dependencies
    #     run: |
    #       python -m pip install --upgrade pip
    #       pip install uv
    #       uv venv
    #       uv pip install -e .

    #   - name: Process test data
    #     shell: bash
    #     run: |
    #       source .venv/bin/activate || source .venv/Scripts/activate
    #       python freemocap/diagnostics/run_calibration.py

    #   - name: Calculate diagnostics
    #     shell: bash
    #     run: |
    #       source .venv/bin/activate || source .venv/Scripts/activate
    #       python freemocap/diagnostics/calculate_calibration_diagnostics.py
      
    #   - uses: actions/upload-artifact@v4
    #     with:
    #       name: calib_row_${{ runner.os }}
    #       path: calib_row.csv

    #   - name: Generate diagnostic report
    #     shell: bash
    #     run: |
    #       source .venv/bin/activate || source .venv/Scripts/activate
    #       uv pip install jinja2
    #       python freemocap/diagnostics/generate_calibration_report.py

    #   # Upload individual per-OS diagnostic report
    #   - name: Upload OS-specific diagnostic report
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: diagnostic_report_${{ matrix.os }}
    #       path: freemocap/diagnostics/calibration_diagnostics.html

    #   # Upload individual per-OS test data
    #   - name: Upload OS-specific calibration
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: test_data_${{ matrix.os }}
    #       path: |
    #         ${{ env.RECORDING_PATH }}/*camera_calibration*.toml

  merge-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv venv
          source .venv/bin/activate
          uv pip install pandas==2.1.4 plotly jinja2 packaging

      # - name: Download calibration rows
      #   uses: actions/download-artifact@v4
      #   with:
      #     pattern: calib_row_*
      #     path: collected

      - name: Merge rows + regenerate report
        shell: bash
        run: |
          source .venv/bin/activate
          python freemocap/diagnostics/calibration/merge_calibration_data.py

      - name: Upload merged calibration report
        uses: actions/upload-artifact@v4
        with:
          name: merged_calibration_report
          path: freemocap/diagnostics/calibration_diagnostics.html

      - name: Upload summary csv
        uses: actions/upload-artifact@v4
        with:
          name: summary_csv
          path: freemocap/diagnostics/calibration/calibration_diagnostics_summary.csv

